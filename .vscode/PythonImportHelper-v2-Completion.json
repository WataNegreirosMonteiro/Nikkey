[
    {
        "label": "annotations",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "send_from_directory",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "session",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "create_app",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def create_app() -> Flask:\n    app = Flask(__name__, template_folder=str(PAGINAS_DIR))\n    app.secret_key = os.environ.get(\"SECRET_KEY\", \"dev-secret-key\")\n    # -------------- Utilidades de persistência --------------\n    DATA_DIR.mkdir(exist_ok=True)\n    def load_users():\n        if not USERS_JSON.exists():\n            return []\n        try:\n            with USERS_JSON.open(\"r\", encoding=\"utf-8\") as f:",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "BASE_DIR = Path(__file__).parent.resolve()\nPAGINAS_DIR = BASE_DIR / \"paginas\"\nASSETS_DIR = BASE_DIR / \"assets\"\nDATA_DIR = BASE_DIR / \"data\"\nUSERS_JSON = DATA_DIR / \"usuarios.json\"\nELEMENTS_JSON = DATA_DIR / \"elementos.json\"\ndef create_app() -> Flask:\n    app = Flask(__name__, template_folder=str(PAGINAS_DIR))\n    app.secret_key = os.environ.get(\"SECRET_KEY\", \"dev-secret-key\")\n    # -------------- Utilidades de persistência --------------",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "PAGINAS_DIR",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "PAGINAS_DIR = BASE_DIR / \"paginas\"\nASSETS_DIR = BASE_DIR / \"assets\"\nDATA_DIR = BASE_DIR / \"data\"\nUSERS_JSON = DATA_DIR / \"usuarios.json\"\nELEMENTS_JSON = DATA_DIR / \"elementos.json\"\ndef create_app() -> Flask:\n    app = Flask(__name__, template_folder=str(PAGINAS_DIR))\n    app.secret_key = os.environ.get(\"SECRET_KEY\", \"dev-secret-key\")\n    # -------------- Utilidades de persistência --------------\n    DATA_DIR.mkdir(exist_ok=True)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "ASSETS_DIR",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "ASSETS_DIR = BASE_DIR / \"assets\"\nDATA_DIR = BASE_DIR / \"data\"\nUSERS_JSON = DATA_DIR / \"usuarios.json\"\nELEMENTS_JSON = DATA_DIR / \"elementos.json\"\ndef create_app() -> Flask:\n    app = Flask(__name__, template_folder=str(PAGINAS_DIR))\n    app.secret_key = os.environ.get(\"SECRET_KEY\", \"dev-secret-key\")\n    # -------------- Utilidades de persistência --------------\n    DATA_DIR.mkdir(exist_ok=True)\n    def load_users():",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "DATA_DIR",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "DATA_DIR = BASE_DIR / \"data\"\nUSERS_JSON = DATA_DIR / \"usuarios.json\"\nELEMENTS_JSON = DATA_DIR / \"elementos.json\"\ndef create_app() -> Flask:\n    app = Flask(__name__, template_folder=str(PAGINAS_DIR))\n    app.secret_key = os.environ.get(\"SECRET_KEY\", \"dev-secret-key\")\n    # -------------- Utilidades de persistência --------------\n    DATA_DIR.mkdir(exist_ok=True)\n    def load_users():\n        if not USERS_JSON.exists():",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "USERS_JSON",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "USERS_JSON = DATA_DIR / \"usuarios.json\"\nELEMENTS_JSON = DATA_DIR / \"elementos.json\"\ndef create_app() -> Flask:\n    app = Flask(__name__, template_folder=str(PAGINAS_DIR))\n    app.secret_key = os.environ.get(\"SECRET_KEY\", \"dev-secret-key\")\n    # -------------- Utilidades de persistência --------------\n    DATA_DIR.mkdir(exist_ok=True)\n    def load_users():\n        if not USERS_JSON.exists():\n            return []",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "ELEMENTS_JSON",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "ELEMENTS_JSON = DATA_DIR / \"elementos.json\"\ndef create_app() -> Flask:\n    app = Flask(__name__, template_folder=str(PAGINAS_DIR))\n    app.secret_key = os.environ.get(\"SECRET_KEY\", \"dev-secret-key\")\n    # -------------- Utilidades de persistência --------------\n    DATA_DIR.mkdir(exist_ok=True)\n    def load_users():\n        if not USERS_JSON.exists():\n            return []\n        try:",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = create_app()\nif __name__ == \"__main__\":\n    port = int(os.environ.get(\"PORT\", 5000))\n    app.run(host=\"0.0.0.0\", port=port, debug=True)",
        "detail": "app",
        "documentation": {}
    }
]